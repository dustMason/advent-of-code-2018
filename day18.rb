require 'set'

input = DATA.read

open = Set.new
trees = Set.new
lumber = Set.new

input.each_line.with_index do |line, y|
  break if line.start_with? 'break'
  line.strip.each_char.with_index do |char, x|
    case char
    when '.' then open << [x, y]
    when '|' then trees << [x, y]
    when '#' then lumber << [x, y]
    end
  end
end

def adjacent(x, y)
  [
    [x - 1, y],
    [x + 1, y],
    [x, y - 1],
    [x, y + 1],
    [x - 1, y - 1],
    [x + 1, y - 1],
    [x + 1, y + 1],
    [x - 1, y + 1],
  ]
end

def pr(open, trees, lumber)
  out = []
  open.each do |(x, y)|
    out[y] ||= []
    out[y][x] = '.'
  end
  trees.each do |(x, y)|
    out[y] ||= []
    out[y][x] = '|'
  end
  lumber.each do |(x, y)|
    out[y] ||= []
    out[y][x] = '#'
  end

  out.map(&:join)
end

# part_1 = 10
part_2 = 1000000000
frame_set = Set.new
frames = []

min, sequence = 1.step(to: part_2) do |min|
  new_open, new_trees, new_lumber = [open.dup, trees.dup, lumber.dup]

  open.each do |(x, y)|
    around = adjacent(x, y)
    if around.count { |(ax, ay)| trees === [ax, ay] } >= 3
      new_trees << [x, y]
      new_open.delete([x, y])
    end
  end

  trees.each do |(x, y)|
    around = adjacent(x, y)
    if around.count { |(ax, ay)| lumber === [ax, ay] } >= 3
      new_lumber << [x, y]
      new_trees.delete([x, y])
    end
  end

  lumber.each do |(x, y)|
    around = adjacent(x, y)
    t = around.none? { |c| trees === c }
    l = around.none? { |c| lumber === c }
    if t || l
      new_open << [x, y]
      new_lumber.delete([x, y])
    end
  end

  open = new_open
  trees = new_trees
  lumber = new_lumber

  frame = pr(open, trees, lumber)
  if frame_set.member? frame
    before = frames.find_index(frame) + 1
    break [min, frames[(before - 1)...min]]
  end
  frame_set << frame
  frames << frame

  print '.'
end

remaining = part_2 - min
final_frame = remaining % sequence.size
joined = sequence[final_frame].join
tree_count = joined.count('|')
lumber_count = joined.count('#')

puts
puts tree_count * lumber_count

__END__
#.|#||..#......##.#||..||....|.#.|.#...#.|..|||.|.
.#..#||..#...##|.|##|..#|..##..#.|...|..|.|##.....
.#|..#..|||.|.|...|..##|.|...|.......|..#.|.#.|...
|....##..#|.........||#|.|.#....#.|.#.#|......#|.#
|.#.|....|.|.#..##|..|...##...|....|.|..##..|.#.#|
...|.|...|....|###.....|.##.#...#........|........
||..||.#|.|.#.|...#....#.#..|#|#.###.|.|...|...|#.
|..|..#..#|....#|...##...#.||..#..#.|.|...#...|.|#
..#...|....|..|.|##...#.#.|#..#.|...#.#..#..#.#.|.
|#.|##.#....#.|.|||#.|#...#|.|#|#.###....|..|.|...
..||#..#..#.|.#...#.#..|.|...|.##|..|...#||....|..
||.|......|.#...##|..#.|.....##|.#..#.||...|.#|.|.
#...|....|..#.....|.#....||#||..|...#||........|#.
|.|....#...#|..#.....#..|..||#..|...#..|...#|.#...
..#|.#.##||#|.#...|...|...#.#||.....#|.|.|.|#|.|..
|..|#..|#...#..|#.|.#..|.#.#|...|.......##.|..##..
##..#|.#||......#...|..#.|.|..#.#...|...........|.
.#....#.|.#...|.#..|.###...|...##........###..|#.#
#......#||#..#..|..#..#|.#.|...||##..|.#.|###.##..
|#.|#......|...#..|#.#|.|.|.##.|#.|........#....#.
#.|.#.|..#..||...|..|#.|..|#|.#|...||.|...#||#|.|.
....#|..|...|##.#...#.||.|...|..#|#.......##...#..
..#..#..|..|...|.|#..|...|#...|..#..|.||.##.###...
.#...###...|#|....#|||..##......#|..#.#|..|#|.#|..
.||.|#....###|.#..##..|###.|...|.....#..|..#......
#.......#...||##..#...#..|..#...##.|#..|.|.#|.#...
|.....#|#....#...#.#.....|#....|#|#|##|#||....|.|#
......#|..#...#.|.....|.|...|.|#.|..|#.#.#.|..#...
|####......#.|.....|.|.....#..#.....|#.#|...#..#.|
||.............|....|||..#|#...##..#|.#.#|.#.|.#.|
..|.....#|.###..#|..#..||...|..|#|..|.||...#.|....
.####..#...#|.##..|#.||.#|#........|.|#|...#..|...
#.##.....#|...|...#.|###..|#|.....#...|..|.|#|.|.#
|.|##.|..|..#|#......#|#......#....#|||#...|#.#.#.
........|.|.#.|#...#.#.......|.|.#|...|#.......|#.
...#.##...#.###|#....||.|...#......|#...#.#...|.#.
|...|#..|.||...#.||.|##....#.##|..|.||.....#||....
#||..|.|......|...|||.#.#.#....|#...|#|.|...|.#..|
#.##.#....#|.|.|#...|..|####...#...|#...|....#....
#|..|||#|....|#|....||....#..#...|||#|.....#...#..
#|.|....||.#...#|.#.|....|...|..|#|.#.#.||..||.##|
|#.|.#...#|#.|...#.|.|..||.|.|..#.#||....#|.|##|..
....##|||#.#....#.##|.#.#|#|#.##....#|.....|..|...
#.|.....|.||.|.#|.#.#|#..##|.#|.##.#.#...#||||#...
.#|..||#...#|.#...|.#|.|.###...|.#....||.|...#..||
.......#...#...##|#....#.||#.....|.#..|..||||.....
.......#|..#......|.##..##..#.|.|||.|..|.##|#|#|#.
...#............#.##...|......#.||#..|.......##||.
.##||..#|##.....|||....|.......|.#.|.|.|...|..|..|
..#.|.#..#.#....#..#.|..||....#......##.|.#..#..#.
